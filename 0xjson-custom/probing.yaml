name: probing
desc: probe for running HTTP and IP

report:
  final:
    - "{{Output}}/probing/dns-{{Workspace}}.txt"
    - "{{Output}}/probing/http-{{Workspace}}.txt"
    - "{{Output}}/probing/new-dns-{{Workspace}}.txt"

pre_run:
  - "CreateFolder('{{Storages}}/summary/{{Workspace}}/')"
  - "CreateFolder('{{Output}}/probing')"
  - "CreateFolder('{{Output}}/ipspace')"

params:
  - finalSubdomainFile: "{{Output}}/subdomain/final-{{Workspace}}.txt"
  - customDnsWordlist: "{{Output}}/probing/customDnsWordlist-{{Workspace}}.txt"
  - bruteWordlist: "{{Data}}/wordlists/dns/all-dns.txt"
  - axiomBinaries: "/root/.axiom/interact"
  - permLimit: "8000"
  - rootDomain: "{{Output}}/subdomain/root-{{Workspace}}.txt"
  - enablePermutation: "true"
  - permWordlist: "{{Data}}/wordlists/dns/altdns.txt"
  - permDomainFile: "{{Output}}/probing/permutation-{{Workspace}}.txt"
  - dnsFile: "{{Output}}/probing/dns-{{Workspace}}.txt"
  - httpFile: "{{Output}}/probing/http-{{Workspace}}.txt"
  - finalHttpFile: "{{Output}}/probing/finalHttp-{{Workspace}}.txt"

steps:
  - conditions:
      - "FileLenght('dnsFile') > 1"
    commands:
      - "cp {{dnsFile}} {{Output}}/probing/bak-dns-{{Workspace}}.txt"
      - "cp {{finalHttpFile}} {{Output}}/probing/bak-finalHttp-{{Workspace}}.txt"
    scripts:
      - "ExecCmd('cat {{Output}}/probing/subbrute-{{Workspace}}.txt >> {{finalSubdomainFile}}')"
      - "SortU('{{finalSubdomainFile}}')"

  - commands:
      - "cat {{finalSubdomainFile}} | {{Binaries}}/str-replace -d '.' -n | sort -u >> {{customDnsWordlist}}"
      - "cat {{bruteWordlist}} >> {{customDnsWordlist}}"
    scripts:
      - "ExecCmd('echo {{Target}} > {{rootDomain}}')"
      - "SortU('{{customDnsWordlist}}')"

  - commands:
      - "{{axiomBinaries}}/axiom-fleet osmedeus -i 10"

  - required:
      - "{{axiomBinaries}}/axiom-scan"
    commands:
      - "{{axiomBinaries}}/axiom-scan {{rootDomain}} -m puredns-bruteforce-osm -wD {{customDnsWordlist}} -o {{Output}}/probing/subbrute-{{Workspace}}.txt --dont-split --fleet 'osmedeus*'"
    scripts:
      - "ExeCmd('cat {{Output}}/probing/subbrute-{{Workspace}}.txt >> {{finalSubdomainFile}}')"
      - "SortU('{{finalSubdomainFile}}')"
      - "ExecCmd('cat {{finalSubdomainFile}} >> {{httpFile}}')"

    conditions:
      - "FileLength('{{finalSubdomainFile}}') <= {{permLimit}}"
      - "'{{enablePermutation}}' == 'true'"
    commands:
    scripts:
      - "Printf('Generating Permutation subdomain wordlists which might create a very big file')"
      - "ExecCmd('cat {{finalSubdomainFile}} | {{Binaries}}/str-replace -W {{permWordlist}} -tld {{Target}} >> {{permDomainFile}}')"
      - "SortU('{{permDomainFile}}')"
      - "ExecCmd('cat {{permDomainFile}} {{finalSubdomainFile}} >> {{httpFile}}')"
      - "SortU('{{httpFile}}')"
  
  - commands:
      - "{{axiomBinaries}}/axiom-scan {{permDomainFile}} -m puredns-resolve-nonwild -o {{Output}}/probing/nonwild-{{Workspace}}.txt --fleet 'osmedeus*'"
    scripts:
      - "SortU('{{Output}}/probing/nonwild-{{Workspace}}.txt')"

  - commands:
      - "{{axiomBinaries}}/axiom-scan {{permDomainFile}} -m puredns-resolve-dns -o {{dnsFile}} --fleet 'osmedeus*'"
    scripts:
      - "SortU('{{dnsFile}}')"

  - commands:
      - "{{axiomBinaries}}/axiom-scan {{permDomainFile}} -m puredns-resolve-wild -o {{Output}}/probing/wildcards-{{Workspace}}.txt --fleet 'osmedeus*'"
    scripts:
      - "SortU('{{Output}}/probing/wildcards-{{Workspace}}.txt')"

  - required:
      - "{{httpFile}}"
    commands:
      - "{{axiomBinaries}}/axiom-scan {{httpFile}} -m httprobe -o {{finalHttpFile}} --fleet 'osmedeus*' --rm-when-done"
    scripts:
      - "SortU('{{finalHttpFile}}')"
      - "ExecCmd('rm -fr {{permDomainFile}}')"
      - "ExecCmd('rm -fr {{httpFile}}')"

  - required:
      - "{{dnsFile}}"
    commands:
      - "cat '{{dnsFile}}' | grep ' A ' | awk '{print $3}' | sort -u >> {{Output}}/ipspace/{{Workspace}}-ip.txt"
    scripts:
      - "SortU('{{Output}}/ipspace/{{Workspace}}-ip.txt')"

  - conditions:
      - "FileLength('{{Output}}/probing/bak-dns-{{Workspace}}.txt') > 1"
    scripts:
      - "ExecCmd('cat {{dnsFile}} | anew {{Output}}/probing/bak-dns-{{Workspace}}.txt > {{Output}}/probing/new-dns-{{Workspace}}.txt')"
      - "SortU('{{Output}}/probing/new-dns-{{Workspace}}.txt')"
      - "Printf('New DNS detected: {{Output}}/probing/new-dns-{{Workspace}}.txt')"

  - conditions:
      - "FileLength('{{Output}}/probing/bak-http-{{Workspace}}.txt') > 1"
    scripts:
      - "ExecCmd('cat {{finalHttpFile}} | anew {{Output}}/probing/bak-finalHttp-{{Workspace}}.txt > {{Output}}/probing/new-finalHttp-{{Workspace}}.txt')"
      - "SortU('{{Output}}/probing/new-finalHttp-{{Workspace}}.txt')"

  - required:
      - "{{finalHttpFile}}"
    commands:
      - "cat {{finalHttpFile}} >> {{Storages}}/summary/{{Workspace}}/http-{{Workspace}}.txt"
      - "cat {{dnsFile}} >> {{Storages}}/summary/{{Workspace}}/dns-{{Workspace}}.txt"
    scripts:
      - "ExecCmd('cat {{Storages}}/summary/{{Workspace}}/http-{{Workspace}}.txt >> {{finalhttpFile}}')"
      - "ExecCmd('cat {{Storages}}/summary/{{Workspace}}/dns-{{Workspace}}.txt >> {{dnsFile}}')"
      - "Sort('{{Storages}}/summary/{{Workspace}}/http-{{Workspace}}.txt')"
      - "Sort('{{Storages}}/summary/{{Workspace}}/dns-{{Workspace}}.txt')"
      - "Sort('{{dnsFile}}')"
      - "Sort('{{finalHttpFile}}')"

post_run:
  - "TotalSubdomain('{{Output}}/probing/nonwild-{{Workspace}}.txt')"
  - "TotalDns('{{dnsFile}}')"
